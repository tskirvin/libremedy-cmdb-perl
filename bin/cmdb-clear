#!/usr/bin/perl
# Copyright and license are in the documentation below.

=head1 NAME

cmdb-clear - clears BaseObject/BaseRelationship tables

=head1 SYNOPSIS

B<cmdb-clear> MDRID REASON

=head1 DESCRIPTION

cmdb-clear takes advantage of the business logic in the table stored in
B<Remedy::Form::CMDB_Clear> to wipe all data stored in the BaseElement and 
BaseRelationship tables.

Yes, this is deliberately obscure.

=cut

##############################################################################
### Configuration ############################################################
##############################################################################

## Print debugging information?  Set with '--debug', can be set many times
our $DEBUG = 0;

##############################################################################
### Declarations #############################################################
##############################################################################

use strict;
use warnings;

use Getopt::Long qw/GetOptions/;
use Pod::Usage;
use Remedy;
use Remedy::Form::CMDB_Clear;

$0 =~ s%.*/%%g;     # Lose the annoying path information
$|++;               # Flush output

##############################################################################
### main () ##################################################################
##############################################################################

my $logger = Remedy::Log->get_logger;

my $parser = new Getopt::Long::Parser;
my $result = $parser->getoptions (
    'd|debug+'      => \$DEBUG,
    'man'           => sub { pod2usage (-verbose=>2) },
    'h|help'        => sub { pod2usage (-verbose=>1) }) || pod2usage (1);
my ($mdrid, $text) = @ARGV;
pod2usage (-verbose=>0) unless ($mdrid && $text);

my $remedy = eval { Remedy->connect ('debug' => $DEBUG) }
    or $logger->logdie ("couldn't connect to database: $@");
$logger->logdie ($@) if $@;

my $delete = $remedy->create ('Remedy::Form::CMDB_Clear')
    or $logger->logdie ('could not create new CMDB_Clear object');
$delete->mdrId ($mdrid);
$delete->text ($text);

if (my $return = $delete->save) { 
    $logger->error ("could not save CMDB_Clear object: $return");
    exit 1;
} else {
    $logger->error ("BaseObject and BaseRelationship are cleared for $mdrid");
    exit 0;
}

##############################################################################
### Final Documentation ######################################################
##############################################################################

=head1 OPTIONS

=over 4

=item B<-h>, B<--help>

Prints out the synopsis information and exits.

=item B<-v>, B<--version>

Prints out the version information and exits.

=back

=head1 EXAMPLES

=head1 REQUIREMENTS

B<Remedy>, B<Remedy::Form::CMDB_Clear>

=cut

=head1 AUTHOR

Tim Skirvin <tskirvin@stanford.edu>

=head1 LICENSE

Copyright 2009 Board of Trustees, Leland Stanford Jr. University

This program is free software; you may redistribute it and/or modify
it under the same terms as Perl itself.

=cut
