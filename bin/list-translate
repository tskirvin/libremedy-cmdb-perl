#!/usr/bin/perl
# Copyright and license are in the documentation below.

##############################################################################
### Configuration ############################################################
##############################################################################

## Print debugging information?  Set with '--debug', can be set many times
our $DEBUG = 0;

our $TABLE = '+CMDB-InstanceId_Registration';

##############################################################################
### Declarations #############################################################
##############################################################################

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;
use Remedy;
use Text::Wrap;

$0 =~ s%.*/%%g;     # Lose the annoying path information
$|++;               # Flush output

##############################################################################
### main () ##################################################################
##############################################################################

my $logger = Remedy::Log->get_logger;

my $parser = new Getopt::Long::Parser;
my $result = $parser->getoptions (
    'd|debug+'      => \$DEBUG,
    'man'           => sub { pod2usage (-verbose=>2, -noperldoc => 1) },
    'h|help'        => sub { pod2usage (-verbose=>1) }) || error_usage ();

my $remedy = eval { Remedy->connect ('debug' => $DEBUG) }
    or $logger->logdie ("couldn't connect to database: $@");
$logger->logdie ($@) if $@;

my ($dataset, @rest) = @ARGV;
error_usage ('need an dataset name') unless $dataset;

## Pulling all entries from table
$logger->info ("finding entries in table '$TABLE' in dataset $dataset");
my @entries = eval { $remedy->read ($TABLE, {'DatasetId' => $dataset}) };
if ($@) { 
    print "No information for '$dataset'\n";
}
$logger->info (sprintf ("%d %s", scalar @entries, 
    scalar @entries eq 1 ? "entries" : "entries"));

## Actually printing the useful information
if (! scalar @entries) { 
    $logger->error ("no entries in table for '$dataset'");
    exit 0;
} else { 
    my $count = 0;
    foreach my $entry (@entries) { 
        my $print = $entry->get ('localId');
        print "$print\n";
    }
}
    
exit 0;

##############################################################################
### Subroutines ##############################################################
##############################################################################

sub error_usage { 
    my ($error) = @_;
    my $logger = Remedy::Log->get_logger ();
    $logger->error ($error);
    pod2usage (-exit_status => 2, -verbose => 1);
}

##############################################################################
### Documentation ############################################################
##############################################################################

=head1 NAME

remedy-dump - print all information from a Remedy table

=head1 SYNOPSIS

B<remedy-dump> I<TABLE>

B<remedy-dump> --help

=head1 DESCRIPTION

remedy-dump pulls and prints all entries from the given I<TABLE> in the Remedy
database. 

=head1 OPTIONS

=over 4

=item B<-d>, B<--debug>

Print debugging information, both within this module and within the Remedy
module.  Can be offered multiple times to increase debugging accordingly.

=item B<-h>, B<--help>

Prints out the synopsis information and exits.

=item B<--man>

Prints out the full help documentation and exits.

=back

=head1 REQUIREMENTS

B<Remedy>

=head1 HOMEPAGE

TBD.

=head1 AUTHOR

Tim Skirvin <tskirvin@stanford.edu>

=head1 LICENSE

Copyright 2008-2009 Board of Trustees, Leland Stanford Jr. University

This program is free software; you may redistribute it and/or modify
it under the same terms as Perl itself.

=cut
